//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil
//     Les modifications apportées à ce fichier seront perdues si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Windows;
using System.Windows.Controls;
using System.Runtime.Serialization;

namespace Album_Photo
{
    [Serializable]
    public class AlbumPhoto 
    {

        public AlbumPhoto()
        {
            AlbumPages = new LinkedList<Pages.GenericPage>();
            current_pos = null;
           // N = -1;
       
        }

       // public int N { get; set; }


        public int albumSize { get { return AlbumPages.Count; } }
        
        private LinkedList<Pages.GenericPage> AlbumPages
        {
            get;
            set;
        }

        public LinkedListNode<Pages.GenericPage> current_pos
        {
            get;
            set;
        }

        public void CreerPage(Pages.GenericPage page)
        {
            if (current_pos != null)
            {
                AlbumPages.AddAfter(current_pos, page);
                current_pos = current_pos.Next;
            }
            else
            {
                current_pos = new LinkedListNode<Pages.GenericPage>(page);
                AlbumPages.AddFirst(current_pos);
            }
           // N++;
            Console.WriteLine("page added");
            Console.WriteLine(AlbumPages.Count);
            //N = AlbumPages.Count;

        }

        public void DeletePage()
        {
            if (current_pos != null)
            {
                if (current_pos.Next != null)
                {
                    LinkedListNode<Pages.GenericPage> new_pos = current_pos.Next;
                    AlbumPages.Remove(current_pos);
                    current_pos = new_pos;
                }
                else if (current_pos.Previous != null)
                {
                    LinkedListNode<Pages.GenericPage> new_pos = current_pos.Previous;
                    AlbumPages.Remove(current_pos);
                    current_pos = new_pos;
                }
                else
                {
                    AlbumPages.Remove(current_pos);
                    current_pos = null;
                }
               // N--;
                //N = AlbumPages.Count;
            }
        }

      
    }

}